from rest_framework import serializers
from .models import Embryo, DIAGNOSIS_CHOICES, CONCEPTION_CHOICES, KARYOTYPE_CHOICES
from ..serializer import FamilyMemberSerializerOutput, FamilyMemberSerializerInput
from .services import EmbryoService

class EmbryoSerializerOutput(FamilyMemberSerializerOutput):
    test_field = serializers.CharField(max_length=256)
    family_number = serializers.IntegerField()
    abortus_id = serializers.IntegerField()
    abortus_id_in_family = serializers.CharField(max_length=256)
    date_of_receipt = serializers.DateField()
    diagnosis = serializers.ChoiceField(choices=DIAGNOSIS_CHOICES, default='none')
    last_menstruation = serializers.DateField(required=False)
    period_pregnancy_by_date = serializers.FloatField(required=False)
    period_pregnancy_by_USI = serializers.FloatField(required=False)
    conception = serializers.ChoiceField(choices=CONCEPTION_CHOICES, default='none')
    twins = serializers.BooleanField(default=False)
    dimensions_fetal_sac_x_1 = serializers.IntegerField(required=False)
    dimensions_fetal_sac_y_1 = serializers.IntegerField(required=False)
    dimensions_fetal_sac_x_2 = serializers.IntegerField(required=False)
    dimensions_fetal_sac_y_2 = serializers.IntegerField(required=False)
    ktr = serializers.IntegerField(required=False)
    features_embryo = serializers.CharField(required=False)
    features_chorion = serializers.CharField(max_length=256, required=False)
    features_yolk_sac = serializers.CharField(max_length=256, required=False)
    features_amniotic_membrane = serializers.CharField(max_length=256,required=False)
    scan_directions = serializers.FileField(required=False)
    note = serializers.CharField(max_length=256, required=False)
    karyotype = serializers.CharField(max_length=20, required=False)
    karyotype_type = serializers.ChoiceField(choices=KARYOTYPE_CHOICES, default='none')
    supernumerary_chromosome = serializers.CharField(max_length=50, required=False)
    mosaicism = serializers.BooleanField(default=False)
    standard_karyotype = serializers.CharField(max_length=100, required=False)
    aCGH_karyotype = serializers.CharField(max_length=256, required=False)
    CNV = serializers.CharField(max_length=256, required=False)
    FISH = serializers.CharField(max_length=50, required=False)
    FISH_mosaicism = serializers.BooleanField(default=False)
    CGH = serializers.CharField(max_length=256, required=False)
    STR = serializers.CharField(max_length=256, required=False)
    SRY = serializers.CharField(max_length=256, required=False)
    RT_PCR = serializers.CharField(max_length=256, required=False)
    methylation = serializers.CharField(max_length=256, required=False)
    LINE =  serializers.CharField(max_length=256, required=False)
    сonflict_between_different_methods = serializers.BooleanField(default=False)
    essence_conflict = serializers.CharField(max_length=256, required=False)


class EmbryoSerializerInput(FamilyMemberSerializerInput):

    test_field = serializers.CharField(max_length=256)
    family_number = serializers.IntegerField()
    abortus_id = serializers.IntegerField()
    abortus_id_in_family = serializers.CharField(max_length=256)
    date_of_receipt = serializers.DateField()
    diagnosis = serializers.ChoiceField(choices=DIAGNOSIS_CHOICES, default='none')
    last_menstruation = serializers.DateField(required=False)
    period_pregnancy_by_date = serializers.FloatField(required=False)
    period_pregnancy_by_USI = serializers.FloatField(required=False)
    conception = serializers.ChoiceField(choices=CONCEPTION_CHOICES, default='none')
    twins = serializers.BooleanField(default=False)
    dimensions_fetal_sac_x_1 = serializers.IntegerField(required=False)
    dimensions_fetal_sac_y_1 = serializers.IntegerField(required=False)
    dimensions_fetal_sac_x_2 = serializers.IntegerField(required=False)
    dimensions_fetal_sac_y_2 = serializers.IntegerField(required=False)
    ktr = serializers.IntegerField(required=False)
    features_embryo = serializers.CharField(required=False)
    features_chorion = serializers.CharField(max_length=256, required=False)
    features_yolk_sac = serializers.CharField(max_length=256, required=False)
    features_amniotic_membrane = serializers.CharField(max_length=256,required=False)
    scan_directions = serializers.FileField(required=False)
    note = serializers.CharField(max_length=256, required=False)
    karyotype = serializers.CharField(max_length=20, required=False)
    karyotype_type = serializers.ChoiceField(choices=KARYOTYPE_CHOICES, default='none')
    supernumerary_chromosome = serializers.CharField(max_length=50, required=False)
    mosaicism = serializers.BooleanField(default=False)
    standard_karyotype = serializers.CharField(max_length=100, required=False)
    aCGH_karyotype = serializers.CharField(max_length=256, required=False)
    CNV = serializers.CharField(max_length=256, required=False)
    FISH = serializers.CharField(max_length=50, required=False)
    FISH_mosaicism = serializers.BooleanField(default=False)
    CGH = serializers.CharField(max_length=256, required=False)
    STR = serializers.CharField(max_length=256, required=False)
    SRY = serializers.CharField(max_length=256, required=False)
    RT_PCR = serializers.CharField(max_length=256, required=False)
    methylation = serializers.CharField(max_length=256, required=False)
    LINE =  serializers.CharField(max_length=256, required=False)
    сonflict_between_different_methods = serializers.BooleanField(default=False)
    essence_conflict = serializers.CharField(max_length=256, required=False)


    def create(self, validated_data: dict):
        service = EmbryoService()
        return service.create_embryo(validated_data=validated_data)
    
    def update(self, instance: Embryo, validated_data: dict):
        service = EmbryoService()
        return service.update_embryo(instance, validated_data)
